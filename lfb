#!/bin/bash

usage() {
cat <<- ENDUSG
Usage:
lfb [flags] (path to fastboot) (directory of files to flash) (pack name)

LFB (Lazy Fastboot) is intended for fastboot commands that you may need to run often, and would take more time to do manually, e.g. flashing stock and similar tasks.

This is done through the use of packs. Packs are essentially sister scripts to lfb, which contain the commands for fastboot to run. Whereas a normal fastboot command may be something like "fastboot flash recovery recovery.img", it is presented in a pack like "try "$fbdir" flash recovery "$fldir"/recovery.img".

Defaults may be hard-coded via the config file. As I am lazy (and such was the inspiration of this project), you'll need to edit them to be your own username. Without them, lfb takes three arguments: Path to fastboot, directory containing the files to flash, and name of pack.

With defaults, lfb takes two arguments. The first should always be -d or --default, to signify that you want to use them. The second should be the pack name.
ENDUSG
}

ifdefaults() {
  source config

  case "$1" in
    "-d"|"--default")
      echo "Running as default."
      defaults="yes"
      checks "$@"
      ;;

    *)
      defaults="no"
      checks "$@"
      ;;
  esac
}

checks() {
  # Make sure things are all good before trying to do anything
  # e.g. pack directory is not empty, variables are set correctly, etc.
  if [[ ! "$(ls $packdir)" ]]; then
    echo "Pack directory is empty. Exiting."
    exit 1
  fi

  arg1="$1"
  arg2="$2"
  arg3="$3"

  if [[ "$defaults" == "yes" ]]; then
    # With defaults set there only needs to be two args; -d, then the pack name
    if [[ "$#" -ge 2 ]]; then
      whattoflash "$@"
    else
      echo "Please give two or more args."
      exit 1
    fi
  elif [[ "$defaults" == "no" ]]; then
    # When not using defaults, three args are needed:
    # fbdir, fldir, pack
    if [[ "$#" -ge 3 ]]; then
      setvars "$@"
    else
      echo "Please give three or more args."
      exit 1
    fi
  fi
}

setvars() {
  # Standard (not using defaults)
  # $1 - fbdir
  # $2 - fldir
  # $3 - pack (set and managed by whattoflash)

  fastboot="$1"
  romfiles="$2"

  if [[ -z "$fastboot" ]]; then
    echo "Please specify a path to fastboot."
    exit 1
  elif [[ -f "$fastboot" ]]; then
      fbdir="$fastboot"
      unset "$fastboot"
  else
    echo "A path to fastboot has been specified that does not exist."
    exit 1
  fi

  if [[ -z "$fbdir" ]]; then
    echo "Please specify a path to rom files."
    exit 1
  elif [[ -d "$romfiles" ]]; then
    fldir="$romfiles"
    unset "$romfiles"
  else
    echo "A path to rom files has been specified that does not exist."
    exit 1
  fi

  whattoflash "$@"
}

whattoflash() {
  if [[ "$defaults" == "yes" ]]; then
    pack="$2"
  elif [[ "$defaults" == "no" ]]; then
    pack="$3"
  else
    echo "Defaults variable is unset, or has an unrecognized value. Assuming no."
    pack="$3"
  fi

  echo "Login user $SUDO_USER"
  echo "packdir is set to $packdir"

  for i in "${packs[@]}"; do
    echo "found i as $i" 
    if [[ "$i" == "$pack" ]]; then
      echo "Pack $pack found! Handing things over to the packfile."
       source "packs/$i"
     else
       echo "Pack $pack was not found! The directory of packfiles is set to $packdir. Ensure this is correct."
    fi
  done
}

main() {
  ifdefaults "$@"
}

main "$@"
